import org.gradle.internal.impldep.com.google.common.io.Files

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id("buildlogic.java-library-conventions")
}
val getTheFile by configurations.registering

dependencies {
    api(project(":list"))
    getTheFile(project(":list","myFile"))
}

// if the next line would be uncommented it would work
// but i guess not recommended?
//val singleFile = getTheFile.get().resolve()
tasks.register("explode"){
    val singleFile = getTheFile.get().singleFile
    doFirst {
        println("we dont get here... " + singleFile)
    }
}
//but is this the recommended way?
tasks.register("doesNotExplode"){
    //resolving happens inside th
    val asFileProperty = project.objects.fileProperty().value {
        println("This line is printed twice, is this a problem?")
        getTheFile.get().singleFile
    }
    val output = project.layout.buildDirectory.file("blub")
    inputs.file(asFileProperty)
    outputs.file(output)

    doFirst {
        println("this works" + asFileProperty.get())
        output.get().asFile.writeText("we did it")
    }

}

